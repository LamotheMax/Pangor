package ca.ubc.ece.salt.sdjsb.analysis.learning.ast;

import java.util.LinkedList;
import java.util.List;

import ca.ubc.ece.salt.sdjsb.analysis.learning.apis.Keyword;

/**
 * The {@code FeatureVectorManager} is a pre-processing step for data mining
 * and machine learning. {@code FeatureVectorManager} manages the feature 
 * vectors that were generated during the AST analysis.
 * 
 * Once all feature vectors have been built, they will contain some meta info
 * (commit {@link #clone()}, file, project, etc.) and zero or more 
 * {@code Keyword}s (where a {@code Keyword} = name + context + package.
 * 
 * The {@code FeatureVectorManager} filters out {@code FeatureVector}s that
 * aren't wanted (i.e., those that aren't related to a package we are 
 * investigating) and features that are not used or hardly used.
 */
public class FeatureVectorManager {
	
	/** 
	 * The packages we want to investigate. FeatureVectorManager 
	 * filters out any FeatureVector which does not contain one of these 
	 * packages. 
	 */
	private List<String> packagesToExtract;
	
	/** An ordered list of the keywords to print in the feature vector. **/
	private List<Keyword> keywords;
	
	/** The feature vectors generated by the AST analysis. **/
	private List<FeatureVector> featureVectors;
	
	public FeatureVectorManager(List<String> packagesToExtract) {
		this.packagesToExtract = packagesToExtract;
		this.keywords = new LinkedList<Keyword>();
		this.featureVectors = new LinkedList<FeatureVector>();
	}
	
	/**
	 * Adds a feature vector.
	 * @param featureVector The feature vector to be managed by this class.
	 */
	public void registerFeatureVector(FeatureVector featureVector) {
		this.featureVectors.add(featureVector);
	}
	
	/**
	 * Builds the feature vector header by filtering out features (columns)
	 * that are not used or hardly used.
	 * @return The feature vector header as a CSV list.
	 */
	public String getFeatureVectorHeader() { 
		throw new UnsupportedOperationException();
	}
	
	/**
	 * Builds the feature vector by filtering out feature vectors (rows)
	 * that do not contain the packages specified in {@code packagesToExtract}.
	 * @return The data set as a CSV file.
	 */
	public String getFeatureVector() {
		throw new UnsupportedOperationException();
	}
	
	/**
	 * Performs pre-processing operations for data-mining. Specifically, 
	 * filters out rows which do not use the specified packages and filters
	 * out columns which do not contain any data.
	 */
	public void preProcess() {
		throw new UnsupportedOperationException();
	}

}
